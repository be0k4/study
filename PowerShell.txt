拡張子について
	スクリプトファイルは.ps1

実行方法について
	1PoweShellを開く
	2スクリプトのあるフォルダへ移動
	3.\スクリプト名　で実行可能
	スクリプト名にスペースを含む場合は "で囲むように

実行ポリシーについて
	スクリプトの実行にはポリシーの設定が必要。ポリシーを設定するには管理者権限でpowershellを開く必要があるので注意
	Get-ExecutionPolicy　ポリシーの取得
	Set-ExecutionPolicy RemoteSigned ポリシーの設定

	一時的にポリシーを設定したり、タスクスケジューラで設定することも可能
            
モジュールについて
	標準のpowershellスクリプト以外にも、モジュールを公式のリポジトリからインストールすることで今後使用することができるようになる
	Install-Module -Name ImportExcel -Force -Scope CurrentUser　モジュールのインストール。ユーザーのモジュールフォルダに配置される
	Get-InstalledModule -Name ImportExcel モジュールが既にインストールされているかの確認
	Import-Module ImportExcel　インポートすることで読み込めるようになる

オブジェクトについて
	powershellではすべてのコマンドの戻り値がオブジェクトとして返される
	オブジェクト指向言語と同様にプロパティと、メソッドを持つ
	Get-Process | Get-Member　メンバーの参照
      
変数の宣言
	$~で変数を宣言できる

パイプライン
	｜はコマンド(オブジェクト)を次のコマンドに渡すための仕組み。
	入力が必要なコマンド(オブジェクトに対して何らかの操作を行うコマンド)に渡すオブジェクトを|を使用して簡単に渡せる。メソッドチェーンに近い。

関数の定義
	function メソッド名{ 処理 }
	戻り値はreturnで定義

オブジェクトの作成
	$example = [PScustomObject]@
	{
		キー = 値
		キー = 値
	}

型の指定
	動的型付け言語なので、明示的に型を指定する必要はないが
	[]を変数の前につけることでプロパティの型を指定できる

-ErrorAction SilentlyContinue は全コマンドレットのオプション
	エラーが出た場合にエラーを無視してnullを返す。if文の中ではfalseになる

